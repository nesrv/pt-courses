# ## Задача
#
# Объявите класс `Person`, в объектах которого разрешены только локальные атрибуты с именами (ограничение задается через коллекцию `__slots__`):
#
# * _fio - ФИО сотрудника (строка);
# * _old - возраст сотрудника (целое положительное число);
# * _job - занимаемая должность (строка).
#
# Сами объекты должны создаваться командой:
#
# > p = Person(fio, old, job)
# Создайте несколько следующих объектов этого класса с информацией:
#
# ```
# Суворов, 52, полководец
# Рахманинов, 50, пианист, композитор
# Иванов, 34, программист и преподаватель
# Пушкин, 32, поэт и писатель
# ```
#
# Сохраните все эти объекты в виде списка с именем `persons`. Реализуйте метод в классе, необходимый для сортировки объектов по алфавиту (по фамилии)
#
# При выполненни команды:
#
# ```python
# print(*sorted(persons), sep='\n')
# ```
#
# На экран необходимо вывести:
#
# ```
# Иванов : 34 программист и преподаватель
# Пушкин : 32 поэт и писатель
# Рахманинов : 50 пианист, композитор
# Суворов : 52 полководец
#
# ```
#

class Person:
    __slots__ = ['_fio', '_old', '_job']

    def __init__(self, fio, old, job):
        self._fio = fio
        self._old = old
        self._job = job

    def __repr__(self):
        return f'{self._fio} : {self._old} {self._job}'

    def __lt__(self, other):
        return self._fio < other._fio

persons = {}

persons[0] = Person('Суворов', 52, 'полководец')
persons[1] = Person('Рахманинов', 50, 'пианист, композитор')
persons[2] = Person('Иванов', 34, 'программист и преподаватель')
persons[3] = Person('Пушкин', 32, 'поэт и писатель')


print(*sorted(persons.values()), sep='\n')

