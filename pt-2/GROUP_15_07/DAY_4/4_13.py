# –ö–æ–º–±–∏–Ω–∞—Ç–æ—Ä–∏–∫–∞ –≤ Python

from itertools import *

# content ='üßÄüçÑüçñ'
#
# pizza = combinations(content,2)
# # –∫–æ–º–∏–Ω–∞—Ü–∏–∏ (–±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤)
# print(*pizza, sep='\n', end='\n\n')
#
# pizza = permutations(content, 2)
# # –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ # (—Å–æ—á–µ—Ç–∞–Ω–∏—è –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤)
#
# print(*pizza, sep='\n', end='\n\n')
#
# pizza = product(content, repeat=2)
# print(*pizza, sep='\n', end='\n\n')
# # —Å–æ—á–µ—Ç–∞–Ω–∏—è (–≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è)
#
# pizza = combinations_with_replacement(content,2)
#
# print(*pizza, sep='\n', end='\n\n')
# —Å–æ—á–µ—Ç–∞–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ–º
# –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö –º–Ω–æ–∂–µ—Å—Ç–≤ c –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º

w = '–¢–†–ê–¢–ê–¢–ê'

print(w)
res = tuple(permutations(w, 7))
print(len(res))

codes = '1234'

comb_codes = product(codes, repeat=5)
# counter = 0

# for code in comb_codes:
#     if code.count('1') == 2:
#         counter +=1

res = (1 for code in comb_codes if code.count('1') == 2)

# print(counter)
print(sum(res))

word = '–ü–Ø–¢–ù–ò–¶–ê'
comb_words = product(word, repeat=5)

res = (1 for w in comb_words if w[0] != "–ù" and w.count('–Ø') == 1)

print(sum(res))


